[
  "test_account.py::ManageWalletTestCase::test_create_new_address_with_empty_name",
  "test_account.py::ManageWalletTestCase::test_create_new_address_with_non_empty_name",
  "test_account.py::ManageWalletTestCase::test_create_new_address_with_one_existing_key",
  "test_account.py::ManageWalletTestCase::test_create_not_unique_address_with_one_existing_key",
  "test_account.py::ManageWalletTestCase::test_delete_address_with_empty_wallet",
  "test_account.py::ManageWalletTestCase::test_delete_address_with_two_addresses",
  "test_account.py::ManageWalletTestCase::test_show_addresses_which_can_be_deleted_with_two_addresses",
  "test_account.py::ManageWalletTestCase::test_show_own_addresses_with_empty_wallet",
  "test_account.py::ManageWalletTestCase::test_show_own_addresses_with_two_addresses",
  "test_account.py::CreateTransactionTestCase::test_create_transaction_with_invalid_key_pair_index_as_sender",
  "test_account.py::CreateTransactionTestCase::test_create_transaction_with_invalid_payload",
  "test_account.py::CreateTransactionTestCase::test_create_transaction_with_invalid_receiver_address",
  "test_account.py::CreateTransactionTestCase::test_create_transaction_with_valid_input",
  "test_account.py::TransactionTestCase::test_show_transaction_with_existing_transaction",
  "test_account.py::TransactionTestCase::test_show_transaction_with_nonexisting_transaction",
  "test_account.py::LoadBlockTestCase::test_request_block_from_blockchain_although_blockchain_is_empty",
  "test_account.py::LoadBlockTestCase::test_request_block_from_blockchain_with_empty_block_id",
  "test_account.py::LoadBlockTestCase::test_request_block_from_nonempty_blockchain",
  "test_account.py::LoadBlockTestCase::test_show_all_transaction",
  "test_account.py::LoadBlockTestCase::test_show_connected_peers",
  "test_account.py::LoadBlockTestCase::test_show_received_transaction",
  "test_account.py::LoadBlockTestCase::test_show_sent_transaction",
  "test_account.py::LoadBlockTestCase::test_show_transaction_pool",
  "test_blockchain.py::BlockChainComponent::test_add_block",
  "test_blockchain.py::BlockChainComponent::test_add_block_already_in_chain",
  "test_blockchain.py::BlockChainComponent::test_add_block_not_logical_block",
  "test_blockchain.py::BlockChainComponent::test_add_invalid_block",
  "test_blockchain.py::BlockChainComponent::test_calculate_diff",
  "test_blockchain.py::BlockChainComponent::test_create_block",
  "test_blockchain.py::BlockChainComponent::test_get_block_by_hash",
  "test_blockchain.py::BlockChainComponent::test_get_block_by_id",
  "test_blockchain.py::BlockChainComponent::test_get_block_range",
  "test_blockchain.py::BlockChainComponent::test_switch_to_longer_blockchain",
  "test_blockchain.py::BlockChainComponent::test_switch_to_longest_branch",
  "test_bootstrap.py::BootstrapperTestCase::test_bootstrap_with_existing_blocks",
  "test_bootstrap.py::BootstrapperTestCase::test_bootstrap_with_no_blocks",
  "test_consensus.py::Tests::test_show_mine_false",
  "test_consensus.py::Tests::test_show_mine_true",
  "test_consensus.py::Tests::test_show_validate_false",
  "test_consensus.py::Tests::test_show_validate_true",
  "test_cryptohelper.py::Tests::test_hash_input_false",
  "test_cryptohelper.py::Tests::test_key_pairs_match",
  "test_cryptohelper.py::Tests::test_show_hash_false",
  "test_cryptohelper.py::Tests::test_show_hash_true",
  "test_cryptohelper.py::Tests::test_show_signature_false",
  "test_cryptohelper.py::Tests::test_show_signature_true",
  "test_cryptohelper.py::Tests::test_show_validate_false",
  "test_cryptohelper.py::Tests::test_show_validate_true",
  "test_db.py::DbTestCase::test_create_tables",
  "test_db.py::DbTestCase::test_save_block",
  "test_document.py::DocumentTestClass::test_permission_in_write",
  "test_networking.py::PeerListExchangeTestCase::test_client_advertise_peer",
  "test_networking.py::PeerListExchangeTestCase::test_client_exchange_peer_list",
  "test_networking.py::PeerListExchangeTestCase::test_server_advertise_peer_with_no_port_param",
  "test_networking.py::PeerListExchangeTestCase::test_server_advertise_peer_with_port_param",
  "test_networking.py::PeerListExchangeTestCase::test_server_test_get_peers_with_no_entries",
  "test_networking.py::PeerListExchangeTestCase::test_server_test_get_peers_with_one_entry",
  "test_networking.py::SendTransactionTestCase::test_send_transaction_client_valid",
  "test_networking.py::SendTransactionTestCase::test_send_transaction_server_valid",
  "test_networking.py::SendBlockTestCase::test_send_block_client_valid",
  "test_networking.py::SendBlockTestCase::test_send_block_server_valid",
  "test_networking.py::RequestTransactionServerTestCase::test_request_n_transaction_received",
  "test_networking.py::RequestTransactionServerTestCase::test_request_nonexistent_transaction",
  "test_networking.py::RequestTransactionServerTestCase::test_request_transaction",
  "test_networking.py::RequestTransactionServerTestCase::test_request_transaction_in_pool",
  "test_networking.py::RequestTransactionClientTestCase::test_request_n_transaction_received",
  "test_networking.py::RequestTransactionClientTestCase::test_request_nonexistent_transaction",
  "test_networking.py::RequestTransactionClientTestCase::test_request_transaction",
  "test_networking.py::RequestTransactionClientTestCase::test_request_transaction_in_pool",
  "test_networking.py::RequestBlockServerTestCase::test_request_block",
  "test_networking.py::RequestBlockServerTestCase::test_request_block_by_hash",
  "test_networking.py::RequestBlockServerTestCase::test_request_block_with_no_predecessor",
  "test_networking.py::RequestBlockServerTestCase::test_request_blocks_by_hash_range",
  "test_networking.py::RequestBlockClientTestCase::test_request_block",
  "test_networking.py::RequestBlockClientTestCase::test_request_block_by_hash",
  "test_networking.py::RequestBlockClientTestCase::test_request_block_by_range",
  "test_networking.py::RequestBlockClientTestCase::test_request_nonexistent_block",
  "test_transaction.py::TransactionTestCase::test_eq_false",
  "test_transaction.py::TransactionTestCase::test_eq_true",
  "test_transaction.py::TransactionTestCase::test_from_dict",
  "test_transaction.py::TransactionTestCase::test_from_json",
  "test_transaction.py::TransactionTestCase::test_get_json",
  "test_transaction.py::TransactionTestCase::test_hash",
  "test_transaction.py::TransactionTestCase::test_print",
  "test_transaction.py::TransactionTestCase::test_set_signature",
  "test_transaction.py::TransactionTestCase::test_set_transaction_hash",
  "test_transaction.py::TransactionTestCase::test_sign_transaction",
  "test_transaction.py::TransactionTestCase::test_to_dict",
  "test_transaction.py::TransactionTestCase::test_validate_transaction_false",
  "test_transaction.py::TransactionTestCase::test_validate_transaction_true",
  "test_txpool.py::TxPoolTestCase::test_add_transaction",
  "test_txpool.py::TxPoolTestCase::test_add_transaction_if_not_exist",
  "test_txpool.py::TxPoolTestCase::test_get_transaction_by_hash",
  "test_txpool.py::TxPoolTestCase::test_get_transaction_count",
  "test_txpool.py::TxPoolTestCase::test_get_transactions",
  "test_txpool.py::TxPoolTestCase::test_remove_transaction",
  "test_txpool.py::TxPoolTestCase::test_return_transactions_to_pool",
  "test_txpool.py::TxPoolTestCase::test_singleton"
]